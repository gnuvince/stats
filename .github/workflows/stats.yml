name: Test and build stats

on:
  push:
    tags:
      - "*.*.*"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Run tests
      run: cargo test --verbose

  build-linux-musl:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: rustup target add x86_64-unknown-linux-musl
    - run: cargo build --release --target=x86_64-unknown-linux-musl
    - uses: actions/upload-artifact@v1
      with:
        name: stats_linux_musl
        path: target/x86_64-unknown-linux-musl/release/stats

  build-macos:
    needs: test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - run: cargo build --release
    - uses: actions/upload-artifact@v1
      with:
        name: stats_macos
        path: target/release/stats

  build-windows:
    needs: test
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - run: cargo build --release
    - uses: actions/upload-artifact@v1
      with:
        name: stats_windows
        path: target/release/stats.exe

  create-release:
    needs: [build-linux-musl, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: assets/

    - name: Display structure of downloaded files
      run: ls -lR
      working-directory: assets/

    - name: Upload Release Assets
      id: upload_release_assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./assets/stats_linux_musl/stats
        asset_name: stats_linux_musl
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./assets/stats_macos/stats
        asset_name: stats_macos
        asset_content_type: application/octet-stream
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./assets/stats_windows/stats.exe
        asset_name: stats_windows.exe
        asset_content_type: application/octet-stream
